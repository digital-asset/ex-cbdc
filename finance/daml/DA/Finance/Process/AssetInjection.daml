--
-- Copyright (c) 2021, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

module DA.Finance.Process.AssetInjection where

import DA.Finance.Asset
import DA.Finance.Asset.Settlement
import DA.Set as Set

template AssetInjectionRequest
  with
    deposit : AssetDeposit
  where
    signatory deposit.account.id.signatories
    ensure deposit.asset.quantity > 0.0 && deposit.account.id.signatories == Set.fromList [deposit.account.provider, deposit.account.owner]

    
    choice AssetInjectionRequest_Accept : (ContractId AssetDeposit, ContractId AssetInjectionNotification)
      controller deposit.account.provider
      do
        depositCid <- exerciseByKey @AssetSettlementRule deposit.account.id AssetSettlement_Credit with asset = deposit.asset, ctrl = deposit.account.provider
        notificationCid <- create AssetInjectionNotification with ..

        pure (depositCid, notificationCid)

    choice AssetInjectionRequest_Reject : ContractId AssetInjectionFailure
      controller deposit.account.provider
      do create AssetInjectionFailure with ..

template AssetInjectionNotification
  with
    deposit: AssetDeposit
  where
    signatory deposit.account.id.signatories

template AssetInjectionFailure
  with
    deposit: AssetDeposit
  where
    signatory deposit.account.id.signatories
