#
# Copyright (c) 2021, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  daml-executor:
    docker:
      - image: cimg/openjdk:16.0-browsers

commands:
  install_sdk:
    description: "Install Daml SDK"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Install Daml SDK
          command: |
            curl -sSL https://get.daml.com/ | sh /dev/stdin << parameters.version >>
            # idea from https://circleci.com/docs/2.0/env-vars/
            >> $BASH_ENV echo 'export PATH="$HOME/.daml/bin:$PATH"'
  slack_notification:
    description: "Notify about failure on Slack"
    steps:
      - slack/status:
          fail_only: true
          only_for_branches: main
          webhook: '${SLACK_WEBHOOK}'
  install_yq:
    description: "Install yq"
    steps:
      - run:
          name: Install pip3
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt-get install python3-pip
      - run:
          name: Install yq with pip3
          command: |
            pip3 install yq
  install_prerequisities:
    description: "Install all prerequisities"
    parameters:
      daml_sdk_version:
        type: string
    steps:
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - install_yq

jobs:
  daml_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - install_prerequisities:
          daml_sdk_version: << parameters.daml_sdk_version >>
      - run:
          name: License check
          command: |
            mvn license:check
      - run:
          name: Build Daml
          command: |
            make build-dars -j3
      - run:
          name: Daml tests
          command: |
            make test-dars -j2
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/daml-test-reports
      - store_artifacts:
          path: target/daml-test-reports
      - slack_notification

  ui_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - run:
          name: Install libnss3 for Chrome
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt install libnss3
      - install_prerequisities:
          daml_sdk_version: << parameters.daml_sdk_version >>
      - run:
          name: UI install dependencies
          command: |
            make build -j3
      - run:
          name: UI build
          command: |
            > ui/parties.json echo '[{"ledgerId": "","owner": "","party": "","partyName": "","token": ""}]'
            cp default_participant_config.cfg ui/participants.json
            make daml-hub-package LEDGER_ID=some_ledger_id
      - run:
          name: Npm test
          command: |
            make -C ui test
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - slack_notification

  blackduck_check:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_prerequisities:
          daml_sdk_version: << parameters.daml_sdk_version >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - run:
          name: Maven build
          command: |
            mvn clean package
      - run:
          name: UI install dependencies
          command: |
            make build
      - run:
          name: Yarn recursive install
          command: |
            # recurse all directories with a package.json and run yarn install on them to resolve dependencies
            find . -type f \( ! -path '*node_modules*' \) -name package.json | while read hit ; do yarn install --cwd $(dirname "$hit") ; done
      - run:
          name: Blackduck detect
          command: |
            # Pip detector gives NullPointerException after installing pipenv, let's exclude
            bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) \
            ci-build digitalasset_ex-cbdc main \
            --logging.level.com.synopsys.integration=DEBUG \
            --detect.excluded.detector.types=pip \
            --detect.notices.report=true \
            --detect.timeout=3600
      - run:
          command: cp digitalasset_ex_cbdc_main_Black_Duck_Notices_Report.txt NOTICE
      - persist_to_workspace:
          root: .
          paths:
            - "NOTICE"
      - slack_notification

workflows:
  version: 2
  test:
    jobs:
      - daml_test:
          daml_sdk_version: "1.13.0"
          context: refapps
      - ui_test:
          daml_sdk_version: "1.13.0"
          context: refapps
      - blackduck_check:
          daml_sdk_version: "1.13.0"
          filters:
            branches:
              only:
                - /.*blackduck.*/
          context:
            - blackduck
            - refapps
  scheduled_test:
    triggers:
      - schedule:
          # need to scatter jobs to reduce Blackduck load
          # see also https://digitalasset.atlassian.net/browse/ERA-913
          cron: "30 6 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - daml_test:
          daml_sdk_version: "1.13.0"
          context: refapps
      - ui_test:
          daml_sdk_version: "1.13.0"
          context: refapps
      - blackduck_check:
          daml_sdk_version: "1.13.0"
          context:
            - blackduck
            - refapps
